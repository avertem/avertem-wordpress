{"version":3,"sources":["context/ExplorerContext.js","services/ExplorerSession.js","components/blocks/Blocks.js","App.js","serviceWorker.js","index.js"],"names":["ExplorerDefaults","blocks","ExplorerContext","React","createContext","ExplorerSession","props","state","this","getBlocks","Provider","value","children","fetch","method","headers","then","result","json","items","console","log","a","b","p","JSON","parse","currentBlocks","filter","aa","find","bb","concat","setState","Component","Blocks","collapse","fadeIn","columns","name","selector","sortable","noHeader","data","context","fixedHeader","contextType","App","Container","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"gQAEaA,EAAmB,CAC9BC,OAAQ,IAGGC,EAAkBC,IAAMC,cAAc,CACjDH,OAAQD,EAAiBC,SCHdI,EAAb,YAEI,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTN,OAAQD,EAAiBC,QAHd,EAFvB,iFAWQO,KAAKC,cAXb,+BAgBQ,OACE,kBAACP,EAAgBQ,SAAjB,CAA0BC,MAAOH,KAAKD,OAClCC,KAAKF,MAAMM,YAlBzB,kCAuBiB,IAAD,OACRC,MAAM,sCAAsC,CACxCC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,OAAU,sBAGXC,MAAK,SAAAC,GAAM,OAAEA,EAAOC,UACpBF,MAAK,SAAAG,GACFC,QAAQC,IAAI,qBAAqBF,GACjC,IAEiBG,EAAGC,EAAGC,EAFnBN,EAAOO,KAAKC,MAAMP,GACtB,GAAID,EAAKjB,OAAQ,CACb,IACI0B,GADSL,EACaJ,EAAKjB,OADfsB,EACsB,EAAKhB,MAAMN,OAD9BuB,EACqC,OAD/BF,EAAEM,QAAQ,SAAAC,GAAE,OAAMN,EAAEO,MAAO,SAAAC,GAAE,OAAIF,EAAGL,KAAOO,EAAGP,SAAMQ,OAAOT,IAEpF,EAAKU,SAAS,CAAChC,OAAO0B,YAtC1C,GAAqCxB,IAAM+B,W,yBC2BrCC,E,YAIJ,WAAY7B,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACX6B,UAAU,EACVC,QAAQ,GA4CV,EAAKC,QAAU,CACb,CACEC,KAAM,OACNC,SAAU,OACVC,UAAU,GAEZ,CACEF,KAAM,SACNC,SAAU,SACVC,UAAU,GAEZ,CACEF,KAAM,UACNC,SAAU,UACVC,UAAU,GAEZ,CACEF,KAAM,SACNC,SAAU,SACVC,UAAU,GAEZ,CACEF,KAAM,WACNC,SAAU,WACVC,UAAU,GAEZ,CACEF,KAAM,aACNC,SAAU,aACVC,UAAU,GAEZ,CACEF,KAAM,SACNC,SAAU,SACVC,UAAU,GAEZ,CACEF,KAAM,SACNC,SAAU,SACVC,UAAU,IAxFG,E,sEA8FjB,OACM,kBAAC,IAAD,CACEC,UAAQ,EACRC,KAAMnC,KAAKoC,QAAQ3C,OACnBqC,QAAS9B,KAAK8B,QACdO,aAAW,Q,GAvGFX,aAAfC,EAEGW,YAAc5C,EA2GRiC,QCrHAY,MAVf,WACE,OACE,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,SCLYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,wBDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5C,MAAK,SAAA6C,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5C,QAAQ4C,MAAMA,EAAMC,c","file":"static/js/main.8cd60e32.chunk.js","sourcesContent":["import React from 'react';\n\nexport const ExplorerDefaults = {\n  blocks: []\n}\n\nexport const ExplorerContext = React.createContext({\n  blocks: ExplorerDefaults.blocks\n  });","import React from 'react';\nimport {ExplorerContext, ExplorerDefaults} from '../context/ExplorerContext';\n\n\nexport class ExplorerSession extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            blocks: ExplorerDefaults.blocks\n        }\n    }\n\n    componentDidMount() {\n        //this.timer = setInterval(()=> this.getBlocks(), 1000);\n        this.getBlocks();\n    }\n\n    render() {\n\n        return (\n          <ExplorerContext.Provider value={this.state}>\n             {this.props.children}\n          </ExplorerContext.Provider>\n        );\n    }\n\n    getBlocks() {\n        fetch(`/wp-json/avertem/v1/explorer/blocks`,{\n            method: 'get',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json',                  \n            }\n          })\n            .then(result=>result.json())\n            .then(items=> {\n                console.log(\"The result is [%o]\",items);\n                let json = JSON.parse(items)\n                if (json.blocks) {\n                    var merge = (a, b, p) => a.filter( aa => ! b.find ( bb => aa[p] === bb[p]) ).concat(b);\n                    let currentBlocks = merge(json.blocks,this.state.blocks,\"hash\");\n                    this.setState({blocks:currentBlocks})\n                }\n            })\n    }\n}\n\n\nexport default ExplorerSession;","import React, { Component } from 'react';\nimport { \n  Badge,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Row,\n  Collapse,\n  Fade,\n  Progress,\n  Form,\n  FormGroup,\n  FormText,\n  FormFeedback,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupButtonDropdown,\n  InputGroupText,\n  Label,\n  Button,\n  Table,\n  Pagination,\n  PaginationItem,\n  PaginationLink} from 'reactstrap';\n\nimport { ExplorerContext } from '../../context/ExplorerContext';\nimport DataTable, { memoize } from 'react-data-table-component'\n\nclass Blocks extends Component {\n\n  static contextType = ExplorerContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapse: true,\n      fadeIn: true//,\n      /*blocks: this.context.blocks[{\n        hash: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        created: \"2019-12-11T12:17:49\",\n        parent: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        accepted: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        validation: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        merkel: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        height: 2313\n      },{\n        hash: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        created: \"2019-12-11T12:17:49\",\n        parent: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        accepted: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        validation: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        merkel: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        height: 2313\n      },{\n        hash: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        created: \"2019-12-11T12:17:49\",\n        parent: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        accepted: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        validation: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        merkel: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        height: 2313\n      },{\n        hash: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        created: \"2019-12-11T12:17:49\",\n        parent: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        accepted: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        validation: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        merkel: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        height: 2313\n      },{\n        hash: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        created: \"2019-12-11T12:17:49\",\n        parent: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        accepted: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        validation: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        merkel: \"6941575F0300277CE7B37372EF50D2C24A72379B0387A99D45BB206B4DD08925\",\n        height: 2313\n      }]*/\n    };\n\n    this.columns = [\n      {\n        name: 'Hash',\n        selector: 'hash',\n        sortable: true\n      },\n      {\n        name: 'Tangle',\n        selector: 'tangle',\n        sortable: true\n      },\n      {\n        name: 'Created',\n        selector: 'created',\n        sortable: true,\n      },\n      {\n        name: 'Parent',\n        selector: 'parent',\n        sortable: true,\n      },\n      {\n        name: 'Accepted',\n        selector: 'accepted',\n        sortable: true,\n      },\n      {\n        name: 'Validation',\n        selector: 'validation',\n        sortable: true,\n      },\n      {\n        name: 'Merkel',\n        selector: 'merkel',\n        sortable: true,\n      },\n      {\n        name: 'Height',\n        selector: 'height',\n        sortable: true,\n      }\n    ];\n  }\n\n  render() {\n    return (\n          <DataTable\n            noHeader\n            data={this.context.blocks}\n            columns={this.columns}\n            fixedHeader\n          />\n    );\n  }\n}\n\nexport default Blocks;\n","import React from 'react';\n//import logo from './logo.svg';\nimport cx from 'classnames'\n//import './App.css';\nimport { ExplorerSession } from './services/ExplorerSession';\n\n\nimport {\n  Container\n} from 'reactstrap';\n\nimport {Blocks} from './components';\n\nfunction App() {  \n  return (\n    <ExplorerSession>\n      <Container>\n        <Blocks></Blocks>\n      </Container>\n    </ExplorerSession>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';  \nimport ReactDOM from 'react-dom';\n\nimport cx from 'classnames'\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('avertem_explorer_id'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}